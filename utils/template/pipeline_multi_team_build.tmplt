pipeline {
  agent none
  stages {
    
    
    
    stage('Build and Publish DB') {
      agent {
        node {
          label 'kaniko'
        }
      }
      steps {
        container(name: 'kaniko') {
        sh '''echo \'{ "credsStore": "ecr-login" }\' > /kaniko/.docker/config.json
        for i in $(seq $NUMBER_OF_TEAM)
        do
        /kaniko/executor -f `pwd`/Dockerfiles/Dockerfile_mysql -c `pwd` --insecure --skip-tls-verify --cache=false --destination=${ECR_REPO}:${JOB_NAME_FORCED}$(printf "%02d" ${i})db-dev-${BUILD_NUMBER}
        done'''
        }
      }
    }

    
    stage('Build and Publish API') {
      agent {
        node {
          label 'kaniko'
        }
      }
      steps {
        container(name: 'kaniko') {
        sh '''echo \'{ "credsStore": "ecr-login" }\' > /kaniko/.docker/config.json
        for i in $(seq $NUMBER_OF_TEAM)
        do
        /kaniko/executor -f `pwd`/Dockerfiles/Dockerfile_fastapi -c `pwd` --insecure --skip-tls-verify --cache=false --destination=${ECR_REPO}:${JOB_NAME_FORCED}$(printf "%02d" ${i})api-dev-${BUILD_NUMBER}
        done'''
        }
      }
    }

    stage('Build Trading Front End') {
       agent {
          node {
            label 'kaniko'
          }
        }
      steps {
        container(name: 'kaniko') {
        sh '''echo \'{ "credsStore": "ecr-login" }\' > /kaniko/.docker/config.json
        for i in $(seq $NUMBER_OF_TEAM)
        do
        /kaniko/executor -f `pwd`/Dockerfiles/Dockerfile_nginx -c `pwd` --insecure --skip-tls-verify --cache=false --destination=${ECR_REPO}:${JOB_NAME_FORCED}$(printf "%02d" ${i})fe-dev-${BUILD_NUMBER}
        done'''
        }
      }
    }

  }

  environment {
    ECR_REPO = '108174090253.dkr.ecr.us-east-1.amazonaws.com/production-support-course'
    JOB_NAME_FORCED = '<COHORT>'
    NUMBER_OF_TEAM = '<NUMBEROFTEAM>'
  }
}
